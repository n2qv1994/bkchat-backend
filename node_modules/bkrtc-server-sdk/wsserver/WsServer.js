
/**
 * Author: Nguyen Hoang Anh
 * WebSocket Server
 */

var SignalingService = require("../services/SignalingService");
var WsClient = require("./WsClient");
var EventEmitter = require('eventemitter3');
var Utils = require("../utils/Util");
var Uuid = require('node-uuid');

var queues = [];

function web_socket_server(web_socket) {
  var self = this;

  self.event = new EventEmitter();
  self.handle_message(web_socket);
}

web_socket_server.prototype.handle_message = function (web_socket_space) {
  var self = this;

  web_socket_space.on("connection", function(web_socket) {
    var public_key = web_socket.handshake.query.key;
    var room_name = null;

    if(!public_key) {
      var message = "No public key supplied to websocket server";
      SignalingService.notify("ERROR", message, web_socket);
      web_socket.disconnect();
      return;
    }

    // agent_authen
    var agent;

    var agent_authen = SignalingService.agent_authen(public_key);
    if(agent_authen.type === "ERROR") {
      Utils.log(agent_authen.message);
      SignalingService.notify("ERROR", agent_authen.message, web_socket);
      web_socket.disconnect();
      return;
    }
    else if(agent_authen.type === "SUCCESS") {
      Utils.log(agent_authen.message);
      var message2 = "Connect successful to WebSocket Server";
      SignalingService.notify("OPEN", message2, web_socket);
      agent = agent_authen.data;
    }

    var client_socket = new WsClient(agent, self.event, web_socket, web_socket_space, SignalingService);
    client_socket.handle_message();
  });
};

module.exports = web_socket_server;
